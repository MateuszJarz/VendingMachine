<Window x:Class="VendingMachine_MateuszJarząbek.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VendingMachine_MateuszJarząbek"
        mc:Ignorable="d"
        Title="MainWindow" Height="1000.554" Width="898.02" Visibility="Visible">


    <Window.Resources>



        <ImageBrush x:Key="CC_icon" ImageSource="CC.png" Stretch="Uniform" Opacity="0.5"  />
        <ImageBrush x:Key="FF_icon" ImageSource="FF.png" Stretch="Uniform"  Opacity="0.5" />
        <ImageBrush x:Key="SP_icon" ImageSource="SP.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="MD_icon" ImageSource="MD.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="PC_icon" ImageSource="PC.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="CL_icon" ImageSource="CL.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="SC_icon" ImageSource="SC.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="SCB_icon" ImageSource="SCB.png" Stretch="Uniform" Opacity="0.5"/>
        <ImageBrush x:Key="MW_icon" ImageSource="MW.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="CB_icon" ImageSource="CB.png" Stretch="Uniform" Opacity="0.5"/>
        <ImageBrush x:Key="LP_icon" ImageSource="LP.png" Stretch="Uniform" Opacity="0.5"/>
        <ImageBrush x:Key="LL_icon" ImageSource="LL.png" Stretch="Uniform" Opacity="0.5" />

        <ImageBrush x:Key="0.5_icon" ImageSource="coins.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="1_icon" ImageSource="coins.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="2_icon" ImageSource="coins.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="5_icon" ImageSource="coins.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="Akcept_icon" ImageSource="redbutton.png" Stretch="Uniform" Opacity="0.5" />
        <ImageBrush x:Key="Reset_icon" ImageSource="redbutton.png" Stretch="Uniform" Opacity="0.5" />

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="CCStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background"   TargetName="border" Value="{StaticResource CC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CC_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CC_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CC_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FantaStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource FF_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource FF_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource FF_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource FF_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource FF_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource FF_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SpriteStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SP_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SP_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SP_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SP_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource  SP_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SP_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MWStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MD_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SP_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MD_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SP_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MD_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SP_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PepsiStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource PC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PC_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource PC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PC_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource PC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PC_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ColaLite" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CL_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CL_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CL_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CL_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CL_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CL_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnickersStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SC_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SC_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SC_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SC_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SnickersBStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SCB_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SCB_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SCB_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SCB_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SCB_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SCB_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MilkyWayStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MW_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MW_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MW_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MW_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MW_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MW_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CBStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CB_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CB_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CB_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CB_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CB_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CB_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LaysStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LP_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LP_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LP_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LP_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LP_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LP_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LLStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LL_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LL_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LL_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LL_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource LL_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource LL_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="0.5Style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 0.5_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 0.5_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 0.5_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 0.5_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 0.5_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 0.5_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="1Style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 1_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 1_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 1_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 1_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 1_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 1_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="2Style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 2_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 2_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 2_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 2_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 2_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 2_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="5Style" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 5_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 5_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 5_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 5_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource 5_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource 5_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AkcpetStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Akcept_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Akcept_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Akcept_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Akcept_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Akcept_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Akcept_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ResetStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Reset_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Reset_icon}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Reset_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Reset_icon}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Reset_icon}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Reset_icon}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush/>
    </Window.Background>

    <Grid Margin="10,10,-8,2">
        <Grid.RowDefinitions>
            <RowDefinition Height="243*"/>
            <RowDefinition Height="715*"/>
        </Grid.RowDefinitions>
        <Grid.Background>
            <ImageBrush TileMode="FlipXY" ImageSource="back1.png" Stretch="Uniform"/>
        </Grid.Background>

        <Button x:Name="mj_btn_CocaCola" Content="" HorizontalAlignment="Left" Margin="228,81,0,0" VerticalAlignment="Top" Width="105" Height="112" Style="{DynamicResource CCStyle}" Click="mj_btn_CocaCola_Click" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="CC.png" Stretch="Uniform" />
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_Fanta" Content="" HorizontalAlignment="Left" Margin="359,81,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource FantaStyle}" Click="mj_btn_Fanta_Click" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="FF.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_Sprite" Content="" HorizontalAlignment="Left" Margin="481,81,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource SpriteStyle}" Click="mj_btn_Sprite_Click" BorderBrush="{x:Null}">
            <Button.Background>
                <ImageBrush ImageSource="SP.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_Mw" Content="" HorizontalAlignment="Left" Margin="228,197,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource MWStyle}" Click="mj_btn_Mw_Click" BorderBrush="{x:Null}" Grid.RowSpan="2">
            <Button.Background>
                <ImageBrush ImageSource="MD.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_Pepsi" Content="" HorizontalAlignment="Left" Margin="359,197,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource PepsiStyle}" Click="mj_btn_Pepsi_Click" BorderBrush="{x:Null}" Grid.RowSpan="2">
            <Button.Background>
                <ImageBrush ImageSource="PC.png" Stretch="Uniform" />
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_ColaLite" Content="" HorizontalAlignment="Left" Margin="481,197,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource ColaLite}" Click="mj_btn_ColaLite_Click" BorderBrush="{x:Null}" Grid.RowSpan="2">
            <Button.Background>
                <ImageBrush ImageSource="CL.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_Snickers" Content="" HorizontalAlignment="Left" Margin="228,74,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource SnickersStyle}" Click="mj_btn_Snickers_Click" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="SC.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_SnickersWhite" Content="" HorizontalAlignment="Left" Margin="359,74,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource SnickersBStyle}" Click="mj_btn_SnickersWhite_Click" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="SCB.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_MilkiWay" Content="" HorizontalAlignment="Left" Margin="481,74,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource MilkyWayStyle}" Click="mj_btn_MilkiWay_Click" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="MW.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_ChipsBag" Content="" HorizontalAlignment="Left" Margin="228,190,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource CBStyle}" Click="mj_btn_ChipsBag_Click" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="CB.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_LaysP" Content="" HorizontalAlignment="Left" Margin="359,190,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource LaysStyle}" Click="mj_btn_LaysP_Click" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="LP.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_LaysR" Content="" HorizontalAlignment="Left" Margin="481,190,0,0" VerticalAlignment="Top" Width="102" Height="109" Style="{DynamicResource LLStyle}" Click="mj_btn_LaysR_Click" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="LL.png" Stretch="Uniform"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_Accept" Content="Akceptuj" HorizontalAlignment="Left" Margin="618,225,0,0" VerticalAlignment="Top" Width="74" Height="74" Click="mj_btn_Accept_Click" Style="{DynamicResource AkcpetStyle}" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="redbutton.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_5" Content="5" HorizontalAlignment="Left" Margin="726,133,0,0" VerticalAlignment="Top" Width="41" Height="37" Style="{DynamicResource 5Style}" BorderBrush="{x:Null}" Foreground="Black" OpacityMask="Black" Click="mj_btn_5_Click" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="coins.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_05" Content="0.5" HorizontalAlignment="Left" Margin="726,3,0,0" VerticalAlignment="Top" Width="40" Height="42" Style="{DynamicResource 0.5Style}" BorderBrush="{x:Null}" Click="mj_btn_05_Click" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="coins.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_1" Content="1" HorizontalAlignment="Left" Margin="725,50,0,0" VerticalAlignment="Top" Width="41" Height="38" RenderTransformOrigin="0.455,0.582" Style="{DynamicResource 1Style}" BorderBrush="{x:Null}" Click="mj_btn_1_Click" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="coins.png"/>
            </Button.Background>
        </Button>
        <Label Content="MONITOR "  HorizontalAlignment="Left" Margin="368,338,0,0" VerticalAlignment="Top" Height="34" Width="103" Background="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="#FF05AFFF" FontSize="18" Grid.Row="1"/>
        <Label x:Name="mj_lbl_price" Content=""  HorizontalAlignment="Left" Margin="228,377,0,0" VerticalAlignment="Top" Height="37" Width="376" Background="{x:Null}" RenderTransformOrigin="0.5,0.5" Foreground="#FF05AFFF" FontSize="18" Grid.Row="1"/>
        <Button x:Name="mj_btn_2" Content="2" HorizontalAlignment="Left" Margin="726,90,0,0" VerticalAlignment="Top" Width="41" Height="38" RenderTransformOrigin="0.455,0.582" Style="{DynamicResource 2Style}" BorderBrush="{x:Null}" Click="mj_btn_2_Click" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="coins.png"/>
            </Button.Background>
        </Button>
        <Button x:Name="mj_btn_reset" Content="RESET" HorizontalAlignment="Left" Margin="618,317,0,0" VerticalAlignment="Top" Width="75" Height="74" Click="mj_btn_reset_Click" Style="{DynamicResource ResetStyle}" BorderBrush="{x:Null}" Grid.Row="1">
            <Button.Background>
                <ImageBrush ImageSource="redbutton.png"/>
            </Button.Background>
        </Button>
        <Label x:Name="mj_lbl_throwcoins" Content=""  HorizontalAlignment="Left" Margin="228,419,0,0" VerticalAlignment="Top" Height="68" Width="143" Background="{x:Null}" RenderTransformOrigin="-2.636,3.926" Foreground="#FF05AFFF" FontSize="18" Grid.Row="1"/>
        <Label x:Name="mj_lbl_info" Content="" HorizontalAlignment="Left" Margin="10,571,0,0" VerticalAlignment="Top" Width="499" RenderTransformOrigin="0.487,0.538" Height="31" Foreground="White" Grid.Row="1"/>
        <Label x:Name="mj_lbl_info_Copy" Content="" HorizontalAlignment="Left" Margin="10,602,0,0" VerticalAlignment="Top" Width="499" RenderTransformOrigin="0.487,0.538" Height="31" Foreground="White" Grid.Row="1"/>
        <Label x:Name="mj_lbl_info_Copy1" Content="" HorizontalAlignment="Left" Margin="10,638,0,0" VerticalAlignment="Top" Width="499" RenderTransformOrigin="0.487,0.538" Height="31" Foreground="White" Grid.Row="1"/>
        <Label x:Name="mj_lbl_info_Copy2" Content="" HorizontalAlignment="Left" Margin="10,674,0,0" VerticalAlignment="Top" Width="499" RenderTransformOrigin="0.487,0.538" Height="31" Foreground="White" Grid.Row="1"/>
        <ComboBox x:Name="mj_cb_waluty" HorizontalAlignment="Left" Margin="34,40,0,0" VerticalAlignment="Top" Width="120" Background="Black" SelectionChanged="mj_cb_waluty_SelectionChanged">
            <Button x:Name="PL" Content="PL"/>
            <Button x:Name="EUR" Content="EUR"/>
            <Button x:Name="US" Content="US"/>
        </ComboBox>

    </Grid>
</Window>
